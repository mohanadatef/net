#pragma checksum "D:\AWMER\KhadimiEssa\KhadimiEssa\Views\Admin\UserInRoles.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a5a6982579cb0ed097f91251baa0a328726162ed"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_UserInRoles), @"mvc.1.0.view", @"/Views/Admin/UserInRoles.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\AWMER\KhadimiEssa\KhadimiEssa\Views\_ViewImports.cshtml"
using KhadimiEssa;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\AWMER\KhadimiEssa\KhadimiEssa\Views\_ViewImports.cshtml"
using KhadimiEssa.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\AWMER\KhadimiEssa\KhadimiEssa\Views\Admin\UserInRoles.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a5a6982579cb0ed097f91251baa0a328726162ed", @"/Views/Admin/UserInRoles.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7382dd3c129ccafb293208743c1af92e67834108", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Admin_UserInRoles : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\AWMER\KhadimiEssa\KhadimiEssa\Views\Admin\UserInRoles.cshtml"
  
    ViewData["Title"] = "UserInRoles";
    Layout = "~/Views/Shared/_Layout.cshtml";




#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""card-box"">
    <h2 class=""header-title m-t-0 m-b-30"">الصلاحيات</h2>
    <h4 class=""text-center"">يرجى  تحديد المستخدم واختيار الصلاحيات </h4>
  

        <!-- -------------------------------------------------------------------------------------------------- -->

 
            <table class=""table table-striped table-bordered dt-responsive nowrap display"" cellspacing=""0"" width=""100%"">
                <thead>
                    <tr>
                        <th style=""text-align:center"">
                            المستخدمين
                        </th>
                    </tr>
                </thead>
                <tbody style=""text-align:center"" id=""getusers""></tbody>
            </table>


            <table class=""table table-striped table-bordered dt-responsive nowrap display"" cellspacing=""0"" width=""100%"">
                <thead>
                    <tr>
                        <th style=""text-align:center"">
                            الصلاحيات
                ");
            WriteLiteral(@"        </th>
                    </tr>
                </thead>
                <tbody style=""text-align:center"" id=""getrole""></tbody>
            </table>


        <br />


        <input type=""button"" id=""editrole"" onclick=""GetUsersId()"" value=""تحديد الصلاحيات"" class=""btn btn-new-style"" />


        <br />
        <hr />

            <table class=""table table-striped table-bordered dt-responsive nowrap display"" cellspacing=""0"" width=""100%"">
                <thead>
                    <tr>
                        <th style=""text-align:center"">
                            المستخدمين
                        </th>
                        <th style=""text-align:center"">
                            الصلاحيات
                        </th>
                        <th style=""text-align:center"">
                            تعديل الصلاحيات
                        </th>
                    </tr>
                </thead>
                <tbody style=""text-align: center"" id=""userWithRoles"">");
            WriteLiteral("\r\n                </tbody>\r\n            </table>\r\n\r\n        <!-- -------------------------------------------------------------------------------------------------- -->\r\n\r\n\r\n    </div><!-- end row -->\r\n\r\n\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">

        $(document).ready(function () {
            GetRoles();
            GetUsers();
            getuserWithRoles();

            //bind_data_table();

        });
        //var table;
        //function bind_data_table() {
        //    table = $('table.display').DataTable({
        //        ""language"": {
        //            ""sProcessing"": ""جارٍ التحميل..."",
        //            ""sLengthMenu"": ""أظهر _MENU_ مدخلات"",
        //            ""sZeroRecords"": ""لم يعثر على أية سجلات"",
        //            ""sInfo"": ""إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل"",
        //            ""sInfoEmpty"": ""يعرض 0 إلى 0 من أصل 0 سجل"",
        //            ""sInfoFiltered"": ""(منتقاة من مجموع _MAX_ مُدخل)"",
        //            ""sInfoPostFix"": """",
        //            ""sSearch"": ""ابحث:"",
        //            ""sUrl"": """",
        //            ""oPaginate"": {
        //                ""sFirst"": ""الأول"",
        //                ""sPrevious"": ""السابق"",
     ");
                WriteLiteral(@"   //                ""sNext"": ""التالي"",
        //                ""sLast"": ""الأخير""
        //            }
        //        }
        //    });
        //}

        function GetUsersId() {

            var users = [];
            $.each($(""input[name='user']:checked""),
                function () {
                    users.push($(this).attr(""id""));
                });
            //alert(""MyUser: "" + users.join(""||""));

            var roles = [];
            $.each($(""input[name='role']:checked""),
                function () {
                    roles.push($(this).attr(""id""));
                });

            $.ajax({
                type: ""POST"",
                contentType: ""application/json; charset=utf-8"",
                url: ""/Admin/EditUsersInRoles"",
                data: JSON.stringify({
                    users: users,
                    roles: roles
                }),
                dataType: ""json"",
                success: function (response, data) {
      ");
                WriteLiteral(@"              if (response.key == 1) {
                        window.location.reload();
                        Swal.fire({
                            position: 'success',
                            type: 'success',
                            title: 'تم تحديد الصلاحيات بنجاح..',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }

                },
                error: function (err) {
                }
            });


            //$.ajax({
            //    type: ""POST"",
            //    //contentType: ""application/json"",
            //    dataType: ""json"",
            //    url: ""../../Adminstation/GetImages"",
            //    traditional: true,
            //    data: { id : 1 },
            //    //data: '{user:' + JSON.stringify(user) + '}',
            //    contentType: ""application/json; charset=utf-8"",
            //    success: function (data) {
            //        ale");
                WriteLiteral(@"rt(""Done"");
            //    },
            //    failure: function (response) {
            //    }
            //});

        }


        function EEditRoles() {
            var url = ""../../Admin/EditUsers"";
            var user = [""1"", ""2"", ""3""];
            $.getJSON(url,
                { user: user },
                function (data) {

                });
        }

        function GetUsers() {
            var html = """";


            $.ajax({
                type: ""GET"",
                url: ""../../Admin/GetAlluser"",
                contentType: ""application/json"",
                dataType: ""json"",
                success: function (data) {
                    //table.destroy();
                    if (data.key == 1) {
                        $.each(data.users,
                            function (i, item) {
                                html += '<tr>';
                                html += '<td> <div class=""td-check"">' +

                                    ");
                WriteLiteral(@"' <input  type=""checkbox""  id=' + item.id + ' name=""user"" /> <span>' + item.userName + ' </span></div></td>';
                                html += '<tr>';
                            })
                        $(""#getusers"").html(html);
                    } else {
                        html += '<p style=""text-align:center;color:blue;font-size:16px"">' + data.msg + '</p>';
                        $(""#getusers"").html(html);
                    }
                    //bind_data_table();

                },
                failure: function (response) {
                }
            });
        }


        function GetRoles() {
            var html = """";
            $.ajax({
                type: ""GET"",
                url: ""../../Admin/GetAllRoles"",
                contentType: ""application/json"",
                dataType: ""json"",
                success: function (data) {
                    //table.destroy();
                    if (data.key == 1) {
                        $.eac");
                WriteLiteral(@"h(data.roles,
                            function (i, item) {
                                html += '<tr>';
                                html += '<td> <div class=""td-check"">' +

                                    ' <input  type=""checkbox""  id=' + item.id + ' name=""role"" /> <span>' + item.name + ' </span></div></td>';
                                html += '<tr>';
                                html += '<tr>';
                            })
                        $(""#getrole"").html(html);
                    } else {
                        html += '<p style=""text-align:center;color:blue;font-size:16px"">' + data.msg + '</p>';
                        $(""#getrole"").html(html);
                    }
                    //bind_data_table();
                },
                failure: function (response) {
                }
            });
        }

        function getuserWithRoles() {
            var html = '';
            var userRoles = '';
            $.ajax({
              ");
                WriteLiteral(@"  type: ""GET"",
                contentType: ""application/json; charset=utf-8"",
                url: ""/Admin/GetUsersWithRoles"",

                dataType: ""json"",
                success: function (response, data) {
                                        //table.destroy();

                    for (var i = 0; i < response.users.length; i++) {
                        html += '<tr>';



                        html += '<td>' + response.users[i].userName + '</td>';

                        if (response.roles[i].length == 0) {
                            html += '<td>' + 'لا يوجد صلاحيات' + '</td>';
                        } else {
                            html += '<td>' + response.roles[i] + '</td>';

                        }

                        var userId = """" + response.users[i].id + """";



                        html += '<td><input type=""button"" onclick=""editUserRoles(`' + userId + '`)"" class=""icon-font btn btn-purple btn-rounded"" value=""&#xf040;"" /></td>';


          ");
                WriteLiteral(@"              html += '</tr>';
                    }

                    $('#userWithRoles').html(html);
                    //bind_data_table();
                },
                error: function (err) {
                }
            });

        }

        function editUserRoles(id) {
            var userId = $('input[name=""user""]#' + id).attr('id');

            $.each($(""input[name='role']:checked""),
                function () {
                    $(this).prop('checked', false);
                });
            $.each($(""input[name='user']:checked""),
                function () {
                    $(this).prop('checked', false);
                });

            $.ajax({
                type: ""POST"",
                contentType: ""application/json; charset=utf-8"",
                url: ""/Admin/EditUserRoles"",
                data: JSON.stringify({
                    id: id
                }),
                dataType: ""json"",
                success: function (response, d");
                WriteLiteral(@"ata) {

                    if (response.user.id == userId) {
                        $('input[name=""user""]#' + id).prop('checked', true);

                    }
                    for (var i = 0; i < response.userRoles.length; i++) {
                        var roleId = $('input[name=""role""]#' + response.userRoles[i].id).attr('id');
                        if (response.userRoles[i].id == roleId) {
                            $('input[name=""role""]#' + roleId).prop('checked', true);
                        }
                    }
                },
                error: function (err) {
                }
            });
        }

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
